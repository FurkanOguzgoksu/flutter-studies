import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ),
      body: Row(
        mainAxisAlignment: MainAxisAlignment.center, // tÃ¼m olsaÄ±lÄ±klarÄ± aÅŸaÄŸÄ±ya not aldÄ±m....
        children: [
          Container(width: 200, height: 200, color: Colors.green,),
          Container(width: 100, height: 100, color: Colors.blue,),
          Container(width: 25, height: 25, color: Colors.red,),
        ],
      ),
    );
  }
}

/*
ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ MainAxisAlignment â€“ Row ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹
â€¢ start (varsayÄ±lan) â†’ Widgetâ€™lar satÄ±rÄ±n en baÅŸÄ±na (soldan) hizalanÄ±r.
    Row(mainAxisAlignment: MainAxisAlignment.start, ...)

â€¢ end â†’ Widgetâ€™lar satÄ±rÄ±n en sonuna (saÄŸ tarafa) hizalanÄ±r.
    Row(mainAxisAlignment: MainAxisAlignment.end, ...)

â€¢ center â†’ Widgetâ€™lar yatay eksende ortalanÄ±r.
    Row(mainAxisAlignment: MainAxisAlignment.center, ...)

* â€¢ spaceBetween â†’ Ä°lk widget en sola, son widget en saÄŸa yerleÅŸir. Aradakiler eÅŸit boÅŸlukla ayrÄ±lÄ±r.
    Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, ...)

* â€¢ spaceEvenly â†’ TÃ¼m widgetâ€™lar arasÄ±nda ve kenarlarda ''eÅŸit boÅŸluk'' bÄ±rakÄ±lÄ±r.
    Row(mainAxisAlignment: MainAxisAlignment.spaceEvenly, ...)


ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹ MainAxisAlignment â€“ Column ğŸ”¹ğŸ”¹ğŸ”¹ğŸ”¹
â€¢ start (varsayÄ±lan) â†’ Widgetâ€™lar sÃ¼tunun en Ã¼stÃ¼ne hizalanÄ±r.
    Column(mainAxisAlignment: MainAxisAlignment.start, ...)

â€¢ end â†’ Widgetâ€™lar sÃ¼tunun en altÄ±na hizalanÄ±r.
    Column(mainAxisAlignment: MainAxisAlignment.end, ...)

â€¢ center â†’ Widgetâ€™lar dikey eksende ortalanÄ±r.
    Column(mainAxisAlignment: MainAxisAlignment.center, ...)

â€¢ spaceBetween â†’ Ä°lk widget en Ã¼ste, son widget en alta yerleÅŸir. Aradakiler eÅŸit boÅŸlukla ayrÄ±lÄ±r.
    Column(mainAxisAlignment: MainAxisAlignment.spaceBetween, ...)

â€¢ spaceEvenly â†’ TÃ¼m widgetâ€™lar arasÄ±nda ve kenarlarda ''eÅŸit boÅŸluk'' bÄ±rakÄ±lÄ±r.
    Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly, ...)

*/
